import { Meteor } from 'meteor/meteor'
import React, { useState } from 'react'
import PropTypes from 'prop-types'
import TextEditModal from './TextEditModal'
import EmailEditModal from './EmailEditModal'
import { useData, useMessages } from '/imports/api/providers'
import { Container, Grid, Table, Dropdown, Loader, Icon, Segment } from 'semantic-ui-react'
import { MessageMethods } from '/imports/api/methods'
import IncludeVotingLinkToggle from './IncludevotingLinkToggle'
import ActiveToggle from './ActiveToggle'
import ConfirmationModal from '/imports/ui/Components/Modals/ConfirmationModal'
import { Link, useLocation, useHistory } from 'react-router-dom'
import EditableText from '/imports/ui/Components/Inputs/EditableText'

const TextsTable = ({ messages }) => {
	const { themeId } = useData()

	const [ modalOpen, setModalOpen ] = useState(false)
	const [ modalHeader, setModalHeader ] = useState('')
	const [ modalContent, setModalContent ] = useState('')
	const [ modalAction, setModalAction ] = useState()

	const { pathname } = useLocation()
	const history = useHistory()

	const deleteMessage = id => () => MessageMethods.remove.call(id)

	const handleTextEdits = (id, data) => {
		MessageMethods.update.call({ id, data }, err => {
			if(err) {
				console.error(err)
			}
		})
	}

	return (
		<Table celled striped>
			<Table.Header>
				<Table.Row>
					<Table.HeaderCell>Active</Table.HeaderCell>
					<Table.HeaderCell>Title</Table.HeaderCell>
					<Table.HeaderCell>Message</Table.HeaderCell>
					<Table.HeaderCell>Include Link</Table.HeaderCell>
					<Table.HeaderCell>Actions</Table.HeaderCell>
				</Table.Row>
			</Table.Header>

			<Table.Body>
				{ messages.values.map((message, i) => {
					if(message.type === 'text') {
						return (
							<Table.Row key={ i }>
								<Table.Cell>
									<ActiveToggle message={ message } />
								</Table.Cell>
								<Table.Cell>
									<EditableText
										onSubmit={ value => handleTextEdits(message._id, { title: value }) }
									>{ message.title }</EditableText>
								</Table.Cell>
								<Table.Cell>
									<EditableText
										type='textarea'
										onSubmit={ value => handleTextEdits(message._id, { body: value }) }
									>
										{ message.body }
									</EditableText>
								</Table.Cell>
								<Table.Cell>
									<IncludeVotingLinkToggle message={ message } />
								</Table.Cell>
								<Table.Cell singleLine>

									<Dropdown text='Actions' className='link item' direction='left'>
										<Dropdown.Menu>
											<Dropdown.Item onClick={ () => {
												Meteor.call('textVotingLinkToMembers', { themeId, message })
											} }>Send</Dropdown.Item>

											<Dropdown.Divider />

											<Dropdown.Item onClick={ () => {
												setModalHeader('Permanently Delete This Text Message Template?')
												setModalContent(`This will permanently remove ${message.title}.`)
												setModalAction( () => deleteMessage(message._id) )
												setModalOpen(true)
											} } ><Icon name='trash' />Delete Theme</Dropdown.Item>

										</Dropdown.Menu>
									</Dropdown>

								</Table.Cell>
							</Table.Row>
						)
					}
				} ) }
			</Table.Body>
		</Table>
	)
}

TextsTable.propTypes = {
	messages: PropTypes.object
}

export default TextsTable
